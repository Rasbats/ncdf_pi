/*********************************************************************
 * Name:      	main.h
 * Purpose:   	Declares simple wxWidgets application with GUI
 * 				created using wxFormBuilder.
 * Author:
 * Created:
 * Copyright:
 * License:   	wxWidgets license (www.wxwidgets.org)
 *
 * Notes:		Note that all GUI creation code is declared in
 * 				gui.h source file which is generated by wxFormBuilder.
 *********************************************************************/

#ifndef __main__
#define __main__

// main wxWidgets header file
#include <wx/wx.h>

#include "ocpn_plugin.h"

#include "gui.h"
#include "ncdf_reader.h"
#include "wx/wfstream.h"
#include <wx/datetime.h>
#include <vector>
#include <wx/dirdlg.h>

#include <stdio.h>
#include <stdlib.h>
#include <netcdf.h>
#include <list>

#define NDIMS 3
#define NTIME 192

#define NLATEC 105
#define NLONEC 315

#define NLATIS 210
#define NLONIS 245

#define NLATSB 70
#define NLONSB 175

#define NLATNS 175
#define NLONNS 260

#define NLATBS 140
#define NLONBS 315

#define NLATWI 210
#define NLONWI 140

#define EC 0
#define IS 1
#define SB 2
#define NS 3
#define BS 4
#define WI 5

#define LAT_NAME "latitude"
#define LON_NAME "longitude"
#define TIME_NAME "time"
#define V_NAME "v"
#define U_NAME "u"

#define ERR(e) { return 2; }

////////////////////////////////////////////////////////////////////////////////
// main application frame declaration
////////////////////////////////////////////////////////////////////////////////
#ifndef PI
#define PI        3.1415926535897931160E0      /* pi */
#endif

using namespace std;


struct treeItems
{
	long startDate;
	int stepRange[192];
	int numberOfItems;
	int messageCount;
};

struct Selection
{
    wxDouble topLat;
    wxDouble topLon;
    wxDouble bottomLat;
    wxDouble bottomLon;
};

class ncdf_pi;
class ncdfDataMessage;
class Arrow;

class MainDialog : public ncdfDialog {
public:
	MainDialog( wxWindow *parent );
	virtual ~MainDialog();

	ncdfReader 	*my_ncdfReader;

	void SetCursorLatLon(double lat, double lon);
	void setPlugIn(ncdf_pi *p);

	ncdf_pi	*pPlugIn;
	wxWindow	*m_parent;
	Selection	selectionRectangle;
	double		m_cursor_lon, m_cursor_lat;
	double *my_ucurr = 0;
	double *my_vcurr = 0;
	int treeMinutes[96];

	double** gridu;
	double** gridv;


	ncdfDataMessage myncdfData, myData, myMessage;
	vector<ncdfDataMessage> myDataVector;
	int ncdf_get_data(wxString filestr);
	int ncdf_get_keys(wxString filestr);
	int nc_get(wxString filestr);

	int ncdf_get_ncdf1();
	double** makeGridDataCURRENT(ncdfDataMessage message, wxString current);
	int np;
	void OnContextMenu(double m_lat, double m_lon);
	void BuildHelpPage();
	void getCurrentData(double lat, double lon);
	std::list<Arrow*> m_ArrowList;

private:
	void UpdateTrackingControls();
	void printCurrentData();



	wxString toBeaufort(wxFloat32 w);
	wxLogWindow *log_window_m;



protected:
	// protected event handlers
	virtual void OnCloseFrame( wxCloseEvent& event );
	virtual void onCloseDialog( wxCloseEvent& event );
	virtual void OnExitClick( wxCommandEvent& event );
	virtual void onFileButtonClick(wxCommandEvent& event);
	virtual void onAreaChange(wxCommandEvent& event);
	virtual void onPrev(wxCommandEvent& event);
	virtual void onNext(wxCommandEvent& event);


	wxDateTime GetDateFromHours(int hours_in);

	virtual void onDirChanged(wxCommandEvent& event);
	virtual void onTreeSelectionChanged(wxTreeEvent& event);
	virtual void onTreeItemRightClick(wxTreeEvent& event);
	virtual void onDCurrentClick( wxCommandEvent& event );
	virtual void onBmpCurrentForceClick( wxCommandEvent& event );
	void fillDirTree(wxString dir, bool start, wxTreeItemId id);
	void addChildren(wxTreeItemId id, wxString s);
	void readData(wxTreeItemId itemId);

};

class MyTreeItemData : public wxTreeItemData
{
public:
	MyTreeItemData(wxDateTime *dt, wxUint32 hour, ncdfDataMessage *myData, wxString *myFile);

	wxString myFile;
	ncdfDataMessage myData;
	wxUint32 hour;
	wxDateTime dt;
};


class Arrow
{
public:
	double m_dir;
	double m_force;
	double m_lat;
	double m_lon;

};

#endif //__main__
